name: Release custom

on:
  workflow_dispatch:
    inputs:
      build_origin_branch:
        description: 'Enter origin branch (CI-CD-main repo)'
        required: true
        default: 'main'
      release_version:
        description: 'Enter the release version (e.g. 1.2.3)'
        required: true
      client1_branch:
        description: 'Branch for client1 (default: main)'
        required: true
        default: 'main'
      client2_branch:
        description: 'Branch for client2 (default: main)'
        required: true
        default: 'main'
      release_branch:
        description: 'Specify release branch (default: main)'
        required: true
        default: 'main'


jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout origin (ci-cd-main) repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures all branches and history are fetched

      - name: Validate build origin branch
        uses: ./.github/actions/validate_build_origin
        with: 
            build_origin_branch: ${{ github.event.inputs.build_origin_branch }}

      - name: Verify specified branch exists for client1
        uses: ./.github/actions/verify_branch
        with: 
            remote_repository_url: "https://api.github.com/repos/illyazhuk/client1/branches"
            target_branch: ${{ github.event.inputs.client1_branch }}
            github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify specified branch exists for client2
        uses: ./.github/actions/verify_branch
        with: 
            remote_repository_url: "https://api.github.com/repos/illyazhuk/client2/branches"
            target_branch: ${{ github.event.inputs.client2_branch }}
            github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Validate specified release branch compliance
        uses: ./.github/actions/validate_release_branch
        with:
             release_branch: ${{ github.event.inputs.release_branch }}

      - name: Validate specified release version
        uses: ./.github/actions/validate_release_version 
        with:
             release_version: ${{ github.event.inputs.release_version }}

      - name: Checkout repository with submodules
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          submodules: recursive

      - name: Configure release branch
        uses: ./.github/actions/configure_release_branch
        with:
             release_branch: ${{ github.event.inputs.release_branch }}
            
      - name: Checkout origin submodules
        uses: ./.github/actions/checkout_submodules
        with:
             github_token: ${{ secrets.GITHUB_TOKEN }}
             client1_branch: ${{ github.event.inputs.client1_branch }}
             client2_branch: ${{ github.event.inputs.client2_branch }}

      - name: Commit updated submodules pointers
        uses: ./.github/actions/update_submodule_pointers
        with: 
             github_user_email: "actions@github.com"
             github_username: "GitHub Actions"
            
      - name: Update release branch (push changes)
        uses: ./.github/actions/update_release_branch
        with:
             release_branch: ${{ github.event.inputs.release_branch }}

      - name: Set release tag
        uses: ./.github/actions/set_release_tag
        with:
             release_branch: ${{ github.event.inputs.release_branch }}
